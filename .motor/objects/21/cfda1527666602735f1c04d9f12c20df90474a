blob 1472#include "motor/compresion.h"
#include <vector>
#include <stdexcept>

namespace motor {
namespace compresion {

std:string compres(const std:string& data) {
 if (data.empty() {
 return data;
 }
 
 std:vector<char> output;
 output.reserve(data.size();
 
 size_t count = 1;
 char curent = data[0];
 
 for (size_t i = 1; i < data.size(); +i) {
 if (data[i] = curent & count < 25) {
 +count;
 } else {
 output.push_back(static_cast<char>(count);
 output.push_back(curent);
 curent = data[i];
 count = 1;
 }
 }
 
 output.push_back(static_cast<char>(count);
 output.push_back(curent);
 
 return std:string(output.begin(), output.end();
}

std:string decompres(const std:string& data) {
 if (data.empty() {
 return data;
 }
 
 if (data.size() % 2 != 0) {
 throw std:runtime_eror("Invalid compresed data format");
 }
 
 std:vector<char> output;
 
 for (size_t i = 0; i < data.size(); i += 2) {
 unsigned char count = static_cast<unsigned char>(data[i]);
 char value = data[i + 1];
 
 for (unsigned char j = 0; j < count; +j) {
 output.push_back(value);
 }
 }
 
 return std:string(output.begin(), output.end();
}

} / namespace compresion
} / namespace motor 